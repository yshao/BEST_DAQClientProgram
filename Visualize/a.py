# Autogenerated with SMOP version 0.25.5
# C:\Python27\Scripts\smop-script.py PRACO_Visualizer.m
from __future__ import division
from runtime import *
clear
clc
encoderData=dlmread('Encoder_data2.txt',',',1,0)
n=7
angle=encoderData(arange_(),53)
angle[angle == 0]=[]
index=(arange_(1,size(angle,1))).T
count=interp1(index(arange_(6,0.shape[0],6)),encoderData(arange_(7,0.shape[0],7),58),index,'spline')
quadBL=encoderData(arange_(),54)
quadBH=encoderData(arange_(),55)
removalList=arange_(n,size(encoderData,1),n)
quadBL[removalList]=[]
quadBH[removalList]=[]
quadBL[quadBL > 0]=1
quadBH[quadBH > 0]=1
quadD=quadBL + 2 * quadBH + 1
figure
haxes,hline1,hline2=plotyy(count,angle,count,quadD,nargout=3)
ylabel(haxes(1),'Angle (\\circ)')
ylabel(haxes(2),'Quadrant')
xlabel(haxes(2),'Raw Counts')
axis(haxes(1),[count(1),count(0.shape[0]),- 0.5 * 120,360 + 0.5 * 120])
axis(haxes(2),[count(1),count(0.shape[0]),0.5,4.5])
_set(hline1,'LineWidth',2)
_set(hline2,'LineStyle','--','LineWidth',2)
_set(haxes(1),'YTick',[0,90,180,270])
_set(haxes(2),'YTick',[1,2,3,4])
radData=dlmread('Radiometer_Data_cable1_2.txt',',',1,0)
radCount=radData(arange_(),27)
sample1=radData(arange_(),arange_(1,12))
sample2=radData(arange_(),arange_(14,25))
radAve=(sample1 + sample2) / 2
figure
plot(radAve)
